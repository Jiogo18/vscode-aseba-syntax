{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Aseba",
	"patterns": [
		{
			"include": "#HTML"
		},
		{
			"include": "#ASEBA"
		},
		{
			"include": "#other"
		}
	],
	"repository": {
		"other": {
			"name": "invalid.illegal.unknown.aseba",
			"match": "."
		},
		"operators": {
			"name": "keyword.operator.aseba",
			"match": "==|!=|<=|<|>=|>|\\+=|-=|\\*=|/=|\\+\\+|--|\\+|-|\\*|/|\\^|\\||&|~|:|\\."
		},
		"function-call": {
			"name": "meta.function-call.aseba",
			"begin": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\(",
			"beginCaptures": {
				"1": {
					"name": "entity.name.function.aseba"
				}
			},
			"end": "\\)",
			"patterns": [
				{
					"include": "#expressions"
				}
			]
		},
		"array": {
			"name": "meta.array.aseba",
			"begin": "\\[",
			"end": "\\]",
			"patterns": [
				{
					"include": "#expressions"
				},
				{
					"include": "#array"
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.aseba",
					"match": "\\b(emit|while|do|for|in|step|if|then|else|elseif|end|var|const|call|onevent|ontimer|when|and|or|not|abs|sub|callsub|return)\\b"
				}
			]
		},
		"literals": {
			"name": "constant.numeric.aseba",
			"match": "(-{0,1}\\d+|0x([0-9]|[a-f]|[A-F])+|0b[0-1]+)\\b"
		},
		"TODO": {
			"name": "comment.block.aseba",
			"match": "(#\\s*\\bTODO)\\b.*$",
			"captures": {
				"1": {
					"name": "keyword.other.todo.aseba"
				}
			}
		},
		"FIXME": {
			"name": "comment.block.aseba",
			"match": "(#\\s*\\bFIXME)\\b.*$",
			"captures": {
				"1": {
					"name": "keyword.other.fixme.aseba"
				}
			}
		},
		"comments-block": {
			"name": "comment.block.aseba",
			"begin": "#\\*",
			"end": "\\*#"
		},
		"comments-line": {
			"name": "comment.line.aseba",
			"begin": "#",
			"end": "$"
		},
		"invalid-comment": {
			"name": "invalid.illegal.comment.aseba",
			"match": "\\*#"
		},
		"comments": {
			"patterns": [
				{
					"include": "#TODO"
				},
				{
					"include": "#FIXME"
				},
				{
					"include": "#comments-block"
				},
				{
					"include": "#comments-line"
				},
				{
					"include": "#invalid-comment"
				}
			]
		},
		"variable": {
			"name": "variable.other.aseba",
			"match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
		},
		"expressions": {
			"patterns": [
				{
					"include": "#operators"
				},
				{
					"include": "#function-call"
				},
				{
					"include": "#literals"
				},
				{
					"include": "#variable"
				},
				{
					"include": "#array"
				},
				{
					"match": ","
				}
			]
		},
		"affectation": {
			"name": "meta.affectation.aseba",
			"patterns": [
				{
					"include": "#expressions"
				},
				{
					"match": "="
				}
			]
		},
		"ASEBA": {
			"patterns": [
				{
					"include": "#keywords"
				},
				{
					"include": "#function-call"
				},
				{
					"include": "#expressions"
				},
				{
					"include": "#affectation"
				},
				{
					"include": "#comments"
				}
			]
		},
		"HTML_Comment": {
			"name": "comment.block.html.aseba",
			"begin": "<!--",
			"end": "-->"
		},
		"doctype": {
			"begin": "<!(?=(?i:DOCTYPE\\s))",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.tag.begin.html"
				}
			},
			"end": ">",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.tag.end.html"
				}
			},
			"name": "meta.tag.metadata.doctype.html",
			"patterns": [
				{
					"match": "\\G(?i:DOCTYPE)",
					"name": "entity.name.tag.html"
				},
				{
					"begin": "\"",
					"end": "\"",
					"name": "string.quoted.double.html"
				},
				{
					"match": "[^\\s>]+",
					"name": "entity.other.attribute-name.html"
				}
			]
		},
		"HTML_Attribut": {
			"name": "entity.other.attribute-name.html.aseba",
			"match": "([a-zA-Z_][a-zA-Z0-9_]*)\\s*(=)\\s*(\\\"[^\\\"]*\\\")",
			"captures": {
				"1": {
					"name": "entity.other.attribute-name.html.aseba"
				},
				"2": {
					"name": "punctuation.separator.key-value.html.aseba"
				},
				"3": {
					"name": "string.quoted.double.html.aseba"
				}
			}
		},
		"HTML_Element_Begin": {
			"name": "punctuation.definition.tag.html.aseba",
			"begin": "<\\s*\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b",
			"beginCaptures": {
				"1": {
					"name": "entity.name.tag.html.aseba"
				}
			},
			"end": "/?>",
			"patterns": [
				{
					"include": "#HTML_Attribut"
				}
			]
		},
		"HTML_Element_End": {
			"name": "punctuation.definition.tag.html.aseba",
			"match": "</\\s*\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b\\s*>",
			"captures": {
				"1": {
					"name": "entity.name.tag.html.aseba"
				}
			}
		},
		"CDATA_Begin": {
			"name": "punctuation.definition.tag.html.aseba",
			"match": "<!\\[CDATA\\["
		},
		"CDATA_End": {
			"name": "punctuation.definition.tag.html.aseba",
			"match": "\\]\\]>"
		},
		"HTML": {
			"patterns": [
				{
					"include": "#HTML_Comment"
				},
				{
					"include": "#doctype"
				},
				{
					"include": "#HTML_Attribut"
				},
				{
					"include": "#HTML_Element_Begin"
				},
				{
					"include": "#HTML_Element_End"
				},
				{
					"include": "#CDATA_Begin"
				},
				{
					"include": "#CDATA_End"
				}
			]
		}
	},
	"scopeName": "source.aseba"
}